{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../lib/manager/pip-compile/artifacts.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { quote as pipCompile } from 'shlex';\nimport { TEMPORARY_ERROR } from '../../constants/error-messages';\nimport { logger } from '../../logger';\nimport { ExecOptions, exec } from '../../util/exec';\nimport { deleteLocalFile, readLocalFile, writeLocalFile } from '../../util/fs';\nimport { getRepoStatus } from '../../util/git';\nimport type {\n  UpdateArtifact,\n  UpdateArtifactsConfig,\n  UpdateArtifactsResult,\n} from '../types';\n\nfunction getPythonConstraint(\n  config: UpdateArtifactsConfig\n): string | undefined | null {\n  const { constraints = {} } = config;\n  const { python } = constraints;\n\n  if (python) {\n    logger.debug('Using python constraint from config');\n    return python;\n  }\n\n  return undefined;\n}\n\nfunction getPipToolsConstraint(config: UpdateArtifactsConfig): string {\n  const { constraints = {} } = config;\n  const { pipTools } = constraints;\n\n  if (is.string(pipTools)) {\n    logger.debug('Using pipTools constraint from config');\n    return pipTools;\n  }\n\n  return '';\n}\n\nexport async function updateArtifacts({\n  packageFileName: inputFileName,\n  newPackageFileContent: newInputContent,\n  config,\n}: UpdateArtifact): Promise<UpdateArtifactsResult[] | null> {\n  const outputFileName = inputFileName.replace(/(\\.in)?$/, '.txt');\n  logger.debug(\n    `pipCompile.updateArtifacts(${inputFileName}->${outputFileName})`\n  );\n  const existingOutput = await readLocalFile(outputFileName, 'utf8');\n  if (!existingOutput) {\n    logger.debug('No pip-compile output file found');\n    return null;\n  }\n  try {\n    await writeLocalFile(inputFileName, newInputContent);\n    if (config.isLockFileMaintenance) {\n      await deleteLocalFile(outputFileName);\n    }\n    const cmd = 'pip-compile';\n    const tagConstraint = getPythonConstraint(config);\n    const pipToolsConstraint = getPipToolsConstraint(config);\n    const execOptions: ExecOptions = {\n      cwdFile: inputFileName,\n      docker: {\n        image: 'python',\n        tagConstraint,\n        tagScheme: 'pep440',\n        preCommands: [\n          `pip install --user ${pipCompile(`pip-tools${pipToolsConstraint}`)}`,\n        ],\n      },\n    };\n    logger.debug({ cmd }, 'pip-compile command');\n    await exec(cmd, execOptions);\n    const status = await getRepoStatus();\n    if (!status?.modified.includes(outputFileName)) {\n      return null;\n    }\n    logger.debug('Returning updated pip-compile result');\n    return [\n      {\n        file: {\n          name: outputFileName,\n          contents: await readLocalFile(outputFileName, 'utf8'),\n        },\n      },\n    ];\n  } catch (err) {\n    // istanbul ignore if\n    if (err.message === TEMPORARY_ERROR) {\n      throw err;\n    }\n    logger.debug({ err }, 'Failed to pip-compile');\n    return [\n      {\n        artifactError: {\n          lockFile: outputFileName,\n          stderr: err.message,\n        },\n      },\n    ];\n  }\n}\n"]}