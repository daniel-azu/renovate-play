{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../lib/manager/gradle/shallow/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import upath from 'upath';\nimport { regEx } from '../../../util/regex';\nimport type { PackageDependency } from '../../types';\nimport type { GradleManagerData } from '../types';\nimport { TokenType } from './common';\nimport type { PackageVariables, Token, VariableRegistry } from './types';\n\nconst artifactRegex = regEx(\n  '^[a-zA-Z][-_a-zA-Z0-9]*(?:\\\\.[a-zA-Z0-9][-_a-zA-Z0-9]*?)*$'\n);\n\nconst versionLikeRegex = regEx('^(?<version>[-.\\\\[\\\\](),a-zA-Z0-9+]+)');\n\n// Extracts version-like and range-like strings\n// from the beginning of input\nexport function versionLikeSubstring(input: string): string | null {\n  const match = input ? versionLikeRegex.exec(input) : null;\n  return match ? match.groups.version : null;\n}\n\nexport function isDependencyString(input: string): boolean {\n  const split = input?.split(':');\n  if (split?.length !== 3) {\n    return false;\n  }\n  // eslint-disable-next-line prefer-const\n  let [tempGroupId, tempArtifactId, tempVersionPart] = split;\n  if (\n    tempVersionPart !== versionLikeSubstring(tempVersionPart) &&\n    tempVersionPart.includes('@')\n  ) {\n    const versionSplit = tempVersionPart?.split('@');\n    if (versionSplit?.length !== 2) {\n      return false;\n    }\n    [tempVersionPart] = versionSplit;\n  }\n  const [groupId, artifactId, versionPart] = [\n    tempGroupId,\n    tempArtifactId,\n    tempVersionPart,\n  ];\n  return (\n    groupId &&\n    artifactId &&\n    versionPart &&\n    artifactRegex.test(groupId) &&\n    artifactRegex.test(artifactId) &&\n    versionPart === versionLikeSubstring(versionPart)\n  );\n}\n\nexport function parseDependencyString(\n  input: string\n): PackageDependency<GradleManagerData> | null {\n  if (!isDependencyString(input)) {\n    return null;\n  }\n  const [groupId, artifactId, FullValue] = input?.split(':');\n  if (FullValue === versionLikeSubstring(FullValue)) {\n    return {\n      depName: `${groupId}:${artifactId}`,\n      currentValue: FullValue,\n    };\n  }\n  const [currentValue, dataType] = FullValue?.split('@');\n  return {\n    depName: `${groupId}:${artifactId}`,\n    currentValue,\n    dataType,\n  };\n}\n\nexport function interpolateString(\n  childTokens: Token[],\n  variables: PackageVariables\n): string | null {\n  const resolvedSubstrings = [];\n  for (const childToken of childTokens) {\n    const type = childToken.type;\n    if (type === TokenType.String) {\n      resolvedSubstrings.push(childToken.value);\n    } else if (type === TokenType.Variable) {\n      const varName = childToken.value;\n      const varData = variables[varName];\n      if (varData) {\n        resolvedSubstrings.push(varData.value);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n  return resolvedSubstrings.join('');\n}\n\nexport function isGradleFile(path: string): boolean {\n  const filename = upath.basename(path).toLowerCase();\n  return filename.endsWith('.gradle') || filename.endsWith('.gradle.kts');\n}\n\nexport function isPropsFile(path: string): boolean {\n  const filename = upath.basename(path).toLowerCase();\n  return filename === 'gradle.properties';\n}\n\nexport function isTOMLFile(path: string): boolean {\n  const filename = upath.basename(path).toLowerCase();\n  return filename.endsWith('.toml');\n}\n\nexport function toAbsolutePath(packageFile: string): string {\n  return upath.join(packageFile.replace(/^[/\\\\]*/, '/'));\n}\n\nexport function reorderFiles(packageFiles: string[]): string[] {\n  return packageFiles.sort((x, y) => {\n    const xAbs = toAbsolutePath(x);\n    const yAbs = toAbsolutePath(y);\n\n    const xDir = upath.dirname(xAbs);\n    const yDir = upath.dirname(yAbs);\n\n    if (xDir === yDir) {\n      if (\n        (isGradleFile(xAbs) && isGradleFile(yAbs)) ||\n        (isPropsFile(xAbs) && isPropsFile(yAbs))\n      ) {\n        if (xAbs > yAbs) {\n          return 1;\n        }\n        if (xAbs < yAbs) {\n          return -1;\n        }\n      } else if (isGradleFile(xAbs)) {\n        return 1;\n      } else if (isGradleFile(yAbs)) {\n        return -1;\n      }\n    } else if (xDir.startsWith(yDir)) {\n      return 1;\n    } else if (yDir.startsWith(xDir)) {\n      return -1;\n    }\n\n    return 0;\n  });\n}\n\nexport function getVars(\n  registry: VariableRegistry,\n  dir: string,\n  vars: PackageVariables = registry[dir] || {}\n): PackageVariables {\n  const dirAbs = toAbsolutePath(dir);\n  const parentDir = upath.dirname(dirAbs);\n  if (parentDir === dirAbs) {\n    return vars;\n  }\n  const parentVars = registry[parentDir] || {};\n  return getVars(registry, parentDir, { ...parentVars, ...vars });\n}\n"]}