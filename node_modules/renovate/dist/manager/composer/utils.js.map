{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../lib/manager/composer/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { getPkgReleases } from '../../datasource';\nimport { logger } from '../../logger';\nimport { api, id as composerVersioningId } from '../../versioning/composer';\nimport type { ComposerConfig, ComposerLock } from './types';\n\nexport { composerVersioningId };\n\nexport async function getComposerConstraint(\n  constraints: Record<string, string>\n): Promise<string> {\n  const { composer } = constraints;\n\n  if (api.isSingleVersion(composer)) {\n    logger.debug(\n      { version: composer },\n      'Using composer constraint from config'\n    );\n    return composer;\n  }\n\n  const release = await getPkgReleases({\n    depName: 'composer/composer',\n    datasource: 'github-releases',\n    versioning: composerVersioningId,\n  });\n\n  if (!release?.releases?.length) {\n    throw new Error('No composer releases found.');\n  }\n  let versions = release.releases.map((r) => r.version);\n\n  if (composer) {\n    versions = versions.filter(\n      (v) => api.isValid(v) && api.matches(v, composer)\n    );\n  }\n\n  if (!versions.length) {\n    throw new Error('No compatible composer releases found.');\n  }\n\n  const version = versions.pop();\n  logger.debug({ range: composer, version }, 'Using composer constraint');\n  return version;\n}\n\nexport function getPhpConstraint(constraints: Record<string, string>): string {\n  const { php } = constraints;\n\n  if (php) {\n    logger.debug('Using php constraint from config');\n    return php;\n  }\n\n  return null;\n}\n\nexport function extractContraints(\n  composerJson: ComposerConfig,\n  lockParsed: ComposerLock\n): Record<string, string> {\n  const res: Record<string, string> = { composer: '1.*' };\n\n  // extract php\n  if (composerJson.require?.php) {\n    res.php = composerJson.require?.php;\n  }\n\n  // extract direct composer dependency\n  if (composerJson.require?.['composer/composer']) {\n    res.composer = composerJson.require?.['composer/composer'];\n  } else if (composerJson['require-dev']?.['composer/composer']) {\n    res.composer = composerJson['require-dev']?.['composer/composer'];\n  }\n  // check last used composer version\n  else if (lockParsed?.['plugin-api-version']) {\n    const major = api.getMajor(lockParsed?.['plugin-api-version']);\n    res.composer = `${major}.*`;\n  }\n  // check composer api dependency\n  else if (composerJson.require?.['composer-runtime-api']) {\n    const major = api.getMajor(composerJson.require?.['composer-runtime-api']);\n    res.composer = `${major}.*`;\n  }\n  return res;\n}\n"]}