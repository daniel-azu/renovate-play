{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../lib/manager/composer/artifacts.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { quote } from 'shlex';\nimport { getGlobalConfig } from '../../config/global';\nimport {\n  SYSTEM_INSUFFICIENT_DISK_SPACE,\n  TEMPORARY_ERROR,\n} from '../../constants/error-messages';\nimport {\n  PLATFORM_TYPE_GITHUB,\n  PLATFORM_TYPE_GITLAB,\n} from '../../constants/platforms';\nimport * as datasourcePackagist from '../../datasource/packagist';\nimport { logger } from '../../logger';\nimport { ExecOptions, exec } from '../../util/exec';\nimport {\n  deleteLocalFile,\n  ensureCacheDir,\n  ensureLocalDir,\n  getSiblingFileName,\n  localPathExists,\n  readLocalFile,\n  writeLocalFile,\n} from '../../util/fs';\nimport { getRepoStatus } from '../../util/git';\nimport * as hostRules from '../../util/host-rules';\nimport type { UpdateArtifact, UpdateArtifactsResult } from '../types';\nimport type { AuthJson } from './types';\nimport {\n  composerVersioningId,\n  extractContraints,\n  getComposerConstraint,\n  getPhpConstraint,\n} from './utils';\n\nfunction getAuthJson(): string | null {\n  const authJson: AuthJson = {};\n\n  const githubCredentials = hostRules.find({\n    hostType: PLATFORM_TYPE_GITHUB,\n    url: 'https://api.github.com/',\n  });\n  if (githubCredentials?.token) {\n    authJson['github-oauth'] = {\n      'github.com': githubCredentials.token.replace('x-access-token:', ''),\n    };\n  }\n\n  hostRules\n    .findAll({ hostType: PLATFORM_TYPE_GITLAB })\n    ?.forEach((gitlabHostRule) => {\n      if (gitlabHostRule?.token) {\n        const host = gitlabHostRule.resolvedHost || 'gitlab.com';\n        authJson['gitlab-token'] = authJson['gitlab-token'] || {};\n        authJson['gitlab-token'][host] = gitlabHostRule.token;\n        // https://getcomposer.org/doc/articles/authentication-for-private-packages.md#gitlab-token\n        authJson['gitlab-domains'] = [\n          host,\n          ...(authJson['gitlab-domains'] || []),\n        ];\n      }\n    });\n\n  hostRules\n    .findAll({ hostType: datasourcePackagist.id })\n    ?.forEach((hostRule) => {\n      const { resolvedHost, username, password } = hostRule;\n      if (resolvedHost && username && password) {\n        authJson['http-basic'] = authJson['http-basic'] || {};\n        authJson['http-basic'][resolvedHost] = { username, password };\n      }\n    });\n\n  return is.emptyObject(authJson) ? null : JSON.stringify(authJson);\n}\n\nexport async function updateArtifacts({\n  packageFileName,\n  updatedDeps,\n  newPackageFileContent,\n  config,\n}: UpdateArtifact): Promise<UpdateArtifactsResult[] | null> {\n  logger.debug(`composer.updateArtifacts(${packageFileName})`);\n\n  const lockFileName = packageFileName.replace(/\\.json$/, '.lock');\n  const existingLockFileContent = await readLocalFile(lockFileName, 'utf8');\n  if (!existingLockFileContent) {\n    logger.debug('No composer.lock found');\n    return null;\n  }\n\n  const vendorDir = getSiblingFileName(packageFileName, 'vendor');\n  const commitVendorFiles = await localPathExists(vendorDir);\n  await ensureLocalDir(vendorDir);\n  try {\n    await writeLocalFile(packageFileName, newPackageFileContent);\n\n    const constraints = {\n      ...extractContraints(\n        JSON.parse(newPackageFileContent),\n        JSON.parse(existingLockFileContent)\n      ),\n      ...config.constraints,\n    };\n\n    if (config.isLockFileMaintenance) {\n      await deleteLocalFile(lockFileName);\n    }\n\n    const preCommands: string[] = [\n      `install-tool composer ${await getComposerConstraint(constraints)}`,\n    ];\n\n    const execOptions: ExecOptions = {\n      cwdFile: packageFileName,\n      extraEnv: {\n        COMPOSER_CACHE_DIR: await ensureCacheDir('composer'),\n        COMPOSER_AUTH: getAuthJson(),\n      },\n      docker: {\n        preCommands,\n        image: 'php',\n        tagConstraint: getPhpConstraint(constraints),\n        tagScheme: composerVersioningId,\n      },\n    };\n    const cmd = 'composer';\n    let args: string;\n    if (config.isLockFileMaintenance) {\n      args = 'install';\n    } else {\n      args =\n        (\n          'update ' + updatedDeps.map((dep) => quote(dep.depName)).join(' ')\n        ).trim() + ' --with-dependencies';\n    }\n    if (config.composerIgnorePlatformReqs) {\n      if (config.composerIgnorePlatformReqs.length === 0) {\n        args += ' --ignore-platform-reqs';\n      } else {\n        config.composerIgnorePlatformReqs.forEach((req) => {\n          args += ' --ignore-platform-req ' + quote(req);\n        });\n      }\n    }\n    args += ' --no-ansi --no-interaction';\n    if (!getGlobalConfig().allowScripts || config.ignoreScripts) {\n      args += ' --no-scripts --no-autoloader --no-plugins';\n    }\n    logger.debug({ cmd, args }, 'composer command');\n    await exec(`${cmd} ${args}`, execOptions);\n    const status = await getRepoStatus();\n    if (!status.modified.includes(lockFileName)) {\n      return null;\n    }\n    logger.debug('Returning updated composer.lock');\n    const res: UpdateArtifactsResult[] = [\n      {\n        file: {\n          name: lockFileName,\n          contents: await readLocalFile(lockFileName),\n        },\n      },\n    ];\n\n    if (!commitVendorFiles) {\n      return res;\n    }\n\n    logger.debug(`Commiting vendor files in ${vendorDir}`);\n    for (const f of [...status.modified, ...status.not_added]) {\n      if (f.startsWith(vendorDir)) {\n        res.push({\n          file: {\n            name: f,\n            contents: await readLocalFile(f),\n          },\n        });\n      }\n    }\n    for (const f of status.deleted) {\n      res.push({\n        file: {\n          name: '|delete|',\n          contents: f,\n        },\n      });\n    }\n\n    return res;\n  } catch (err) {\n    // istanbul ignore if\n    if (err.message === TEMPORARY_ERROR) {\n      throw err;\n    }\n    if (\n      err.message?.includes(\n        'Your requirements could not be resolved to an installable set of packages.'\n      )\n    ) {\n      logger.info('Composer requirements cannot be resolved');\n    } else if (err.message?.includes('write error (disk full?)')) {\n      throw new Error(SYSTEM_INSUFFICIENT_DISK_SPACE);\n    } else {\n      logger.debug({ err }, 'Failed to generate composer.lock');\n    }\n    return [\n      {\n        artifactError: {\n          lockFile: lockFileName,\n          stderr: err.message,\n        },\n      },\n    ];\n  }\n}\n"]}