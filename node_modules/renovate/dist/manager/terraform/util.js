"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkIfStringIsPath = exports.checkFileContainsDependency = exports.getTerraformDependencyType = exports.resourceTypeExtractionRegex = exports.keyValueExtractionRegex = void 0;
const common_1 = require("./common");
exports.keyValueExtractionRegex = /^\s*(?<key>[^\s]+)\s+=\s+"(?<value>[^"]+)"\s*$/;
exports.resourceTypeExtractionRegex = /^\s*resource\s+"(?<type>[^\s]+)"\s+"(?<name>[^"]+)"\s*{/;
function getTerraformDependencyType(value) {
    switch (value) {
        case 'module': {
            return common_1.TerraformDependencyTypes.module;
        }
        case 'provider': {
            return common_1.TerraformDependencyTypes.provider;
        }
        case 'required_providers': {
            return common_1.TerraformDependencyTypes.required_providers;
        }
        case 'resource': {
            return common_1.TerraformDependencyTypes.resource;
        }
        case 'terraform': {
            return common_1.TerraformDependencyTypes.terraform_version;
        }
        default: {
            return common_1.TerraformDependencyTypes.unknown;
        }
    }
}
exports.getTerraformDependencyType = getTerraformDependencyType;
function checkFileContainsDependency(content, checkList) {
    return checkList.some((check) => content.includes(check));
}
exports.checkFileContainsDependency = checkFileContainsDependency;
const pathStringRegex = /(.|..)?(\/[^/])+/;
function checkIfStringIsPath(path) {
    const match = pathStringRegex.exec(path);
    return !!match;
}
exports.checkIfStringIsPath = checkIfStringIsPath;
//# sourceMappingURL=util.js.map