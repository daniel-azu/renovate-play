{"version":3,"file":"modules.js","sourceRoot":"","sources":["../../../lib/manager/terraform/modules.ts"],"names":[],"mappings":"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","sourcesContent":["import * as datasourceGitTags from '../../datasource/git-tags';\nimport * as datasourceGithubTags from '../../datasource/github-tags';\nimport { TerraformModuleDatasource } from '../../datasource/terraform-module';\nimport { logger } from '../../logger';\nimport { SkipReason } from '../../types';\nimport type { PackageDependency } from '../types';\nimport { TerraformDependencyTypes } from './common';\nimport { extractTerraformProvider } from './providers';\nimport type { ExtractionResult } from './types';\n\nexport const githubRefMatchRegex =\n  /github\\.com([/:])(?<project>[^/]+\\/[a-z0-9-_.]+).*\\?ref=(?<tag>.*)$/i;\nexport const gitTagsRefMatchRegex =\n  /(?:git::)?(?<url>(?:http|https|ssh):\\/\\/(?:.*@)?(?<path>.*.*\\/(?<project>.*\\/.*)))\\?ref=(?<tag>.*)$/;\nconst hostnameMatchRegex = /^(?<hostname>([\\w|\\d]+\\.)+[\\w|\\d]+)/;\n\nexport function extractTerraformModule(\n  startingLine: number,\n  lines: string[],\n  moduleName: string\n): ExtractionResult {\n  const result = extractTerraformProvider(startingLine, lines, moduleName);\n  result.dependencies.forEach((dep) => {\n    // eslint-disable-next-line no-param-reassign\n    dep.managerData.terraformDependencyType = TerraformDependencyTypes.module;\n  });\n  return result;\n}\n\nexport function analyseTerraformModule(dep: PackageDependency): void {\n  const githubRefMatch = githubRefMatchRegex.exec(dep.managerData.source);\n  const gitTagsRefMatch = gitTagsRefMatchRegex.exec(dep.managerData.source);\n  /* eslint-disable no-param-reassign */\n  if (githubRefMatch) {\n    dep.lookupName = githubRefMatch.groups.project.replace(/\\.git$/, '');\n    dep.depType = 'module';\n    dep.depName = 'github.com/' + dep.lookupName;\n    dep.currentValue = githubRefMatch.groups.tag;\n    dep.datasource = datasourceGithubTags.id;\n  } else if (gitTagsRefMatch) {\n    dep.depType = 'module';\n    if (gitTagsRefMatch.groups.path.includes('//')) {\n      logger.debug('Terraform module contains subdirectory');\n      dep.depName = gitTagsRefMatch.groups.path.split('//')[0];\n      const tempLookupName = gitTagsRefMatch.groups.url.split('//');\n      dep.lookupName = tempLookupName[0] + '//' + tempLookupName[1];\n    } else {\n      dep.depName = gitTagsRefMatch.groups.path.replace('.git', '');\n      dep.lookupName = gitTagsRefMatch.groups.url;\n    }\n    dep.currentValue = gitTagsRefMatch.groups.tag;\n    dep.datasource = datasourceGitTags.id;\n  } else if (dep.managerData.source) {\n    const moduleParts = dep.managerData.source.split('//')[0].split('/');\n    if (moduleParts[0] === '..') {\n      dep.skipReason = SkipReason.Local;\n    } else if (moduleParts.length >= 3) {\n      const hostnameMatch = hostnameMatchRegex.exec(dep.managerData.source);\n      if (hostnameMatch) {\n        dep.registryUrls = [`https://${hostnameMatch.groups.hostname}`];\n      }\n      dep.depType = 'module';\n      dep.depName = moduleParts.join('/');\n      dep.datasource = TerraformModuleDatasource.id;\n    }\n  } else {\n    logger.debug({ dep }, 'terraform dep has no source');\n    dep.skipReason = SkipReason.NoSource;\n  }\n  /* eslint-enable no-param-reassign */\n}\n"]}