{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../lib/manager/terraform/util.ts"],"names":[],"mappings":";;;AAAA,qCAAoD;AAEvC,QAAA,uBAAuB,GAClC,gDAAgD,CAAC;AACtC,QAAA,2BAA2B,GACtC,yDAAyD,CAAC;AAE5D,SAAgB,0BAA0B,CACxC,KAAa;IAEb,QAAQ,KAAK,EAAE;QACb,KAAK,QAAQ,CAAC,CAAC;YACb,OAAO,iCAAwB,CAAC,MAAM,CAAC;SACxC;QACD,KAAK,UAAU,CAAC,CAAC;YACf,OAAO,iCAAwB,CAAC,QAAQ,CAAC;SAC1C;QACD,KAAK,oBAAoB,CAAC,CAAC;YACzB,OAAO,iCAAwB,CAAC,kBAAkB,CAAC;SACpD;QACD,KAAK,UAAU,CAAC,CAAC;YACf,OAAO,iCAAwB,CAAC,QAAQ,CAAC;SAC1C;QACD,KAAK,WAAW,CAAC,CAAC;YAChB,OAAO,iCAAwB,CAAC,iBAAiB,CAAC;SACnD;QACD,OAAO,CAAC,CAAC;YACP,OAAO,iCAAwB,CAAC,OAAO,CAAC;SACzC;KACF;AACH,CAAC;AAvBD,gEAuBC;AAED,SAAgB,2BAA2B,CACzC,OAAe,EACf,SAAmB;IAEnB,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5D,CAAC;AALD,kEAKC;AAED,MAAM,eAAe,GAAG,kBAAkB,CAAC;AAC3C,SAAgB,mBAAmB,CAAC,IAAY;IAC9C,MAAM,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzC,OAAO,CAAC,CAAC,KAAK,CAAC;AACjB,CAAC;AAHD,kDAGC","sourcesContent":["import { TerraformDependencyTypes } from './common';\n\nexport const keyValueExtractionRegex =\n  /^\\s*(?<key>[^\\s]+)\\s+=\\s+\"(?<value>[^\"]+)\"\\s*$/;\nexport const resourceTypeExtractionRegex =\n  /^\\s*resource\\s+\"(?<type>[^\\s]+)\"\\s+\"(?<name>[^\"]+)\"\\s*{/;\n\nexport function getTerraformDependencyType(\n  value: string\n): TerraformDependencyTypes {\n  switch (value) {\n    case 'module': {\n      return TerraformDependencyTypes.module;\n    }\n    case 'provider': {\n      return TerraformDependencyTypes.provider;\n    }\n    case 'required_providers': {\n      return TerraformDependencyTypes.required_providers;\n    }\n    case 'resource': {\n      return TerraformDependencyTypes.resource;\n    }\n    case 'terraform': {\n      return TerraformDependencyTypes.terraform_version;\n    }\n    default: {\n      return TerraformDependencyTypes.unknown;\n    }\n  }\n}\n\nexport function checkFileContainsDependency(\n  content: string,\n  checkList: string[]\n): boolean {\n  return checkList.some((check) => content.includes(check));\n}\n\nconst pathStringRegex = /(.|..)?(\\/[^/])+/;\nexport function checkIfStringIsPath(path: string): boolean {\n  const match = pathStringRegex.exec(path);\n  return !!match;\n}\n"]}