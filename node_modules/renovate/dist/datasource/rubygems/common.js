"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchBuffer = exports.fetchJson = exports.knownFallbackHosts = exports.http = exports.id = void 0;
const marshal_1 = __importDefault(require("marshal"));
const url_join_1 = __importDefault(require("url-join"));
const logger_1 = require("../../logger");
const http_1 = require("../../util/http");
const url_1 = require("../../util/url");
exports.id = 'rubygems';
exports.http = new http_1.Http(exports.id);
exports.knownFallbackHosts = ['rubygems.pkg.github.com', 'gitlab.com'];
async function fetchJson(dependency, registry, path) {
    const url = (0, url_join_1.default)(registry, path, `${dependency}.json`);
    logger_1.logger.trace({ registry, dependency, url }, `RubyGems lookup request`);
    const response = (await exports.http.getJson(url)) || {
        body: undefined,
    };
    return response.body;
}
exports.fetchJson = fetchJson;
async function fetchBuffer(dependency, registry, path) {
    const url = `${(0, url_join_1.default)(registry, path)}?${(0, url_1.getQueryString)({
        gems: dependency,
    })}`;
    logger_1.logger.trace({ registry, dependency, url }, `RubyGems lookup request`);
    const response = await exports.http.getBuffer(url);
    return new marshal_1.default(response.body).parsed;
}
exports.fetchBuffer = fetchBuffer;
//# sourceMappingURL=common.js.map