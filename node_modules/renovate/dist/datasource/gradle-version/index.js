"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GradleVersionDatasource = void 0;
const decorator_1 = require("../../util/cache/package/decorator");
const regex_1 = require("../../util/regex");
const gradleVersioning = __importStar(require("../../versioning/gradle"));
const datasource_1 = require("../datasource");
class GradleVersionDatasource extends datasource_1.Datasource {
    constructor() {
        super(GradleVersionDatasource.id);
        this.defaultRegistryUrls = [
            'https://services.gradle.org/versions/all',
        ];
        this.defaultVersioning = gradleVersioning.id;
        this.registryStrategy = 'merge';
    }
    async getReleases({ registryUrl, }) {
        let releases;
        try {
            const response = await this.http.getJson(registryUrl);
            releases = response.body
                .filter((release) => !release.snapshot && !release.nightly)
                .map((release) => ({
                version: release.version,
                releaseTimestamp: GradleVersionDatasource.formatBuildTime(release.buildTime),
                ...(release.broken && { isDeprecated: release.broken }),
            }));
        }
        catch (err) {
            this.handleGenericErrors(err);
        }
        const res = {
            releases,
            homepage: 'https://gradle.org',
            sourceUrl: 'https://github.com/gradle/gradle',
        };
        if (res.releases.length) {
            return res;
        }
        return null;
    }
    static formatBuildTime(timeStr) {
        if (!timeStr) {
            return null;
        }
        if (GradleVersionDatasource.buildTimeRegex.test(timeStr)) {
            return timeStr.replace(GradleVersionDatasource.buildTimeRegex, '$1-$2-$3T$4:$5:$6$7');
        }
        return null;
    }
}
GradleVersionDatasource.id = 'gradle-version';
GradleVersionDatasource.buildTimeRegex = (0, regex_1.regEx)('^(\\d\\d\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\+\\d\\d\\d\\d)$');
__decorate([
    (0, decorator_1.cache)({
        namespace: `datasource-${GradleVersionDatasource.id}`,
        key: ({ registryUrl }) => registryUrl,
    })
], GradleVersionDatasource.prototype, "getReleases", null);
exports.GradleVersionDatasource = GradleVersionDatasource;
//# sourceMappingURL=index.js.map