{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/config/presets/internal/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA,qEAAuD;AACvD,uDAAyC;AACzC,yDAA2C;AAC3C,uDAAyC;AACzC,qDAAuC;AACvC,yDAA2C;AAC3C,2DAA6C;AAC7C,2CAA6B;AAC7B,2DAA6C;AAC7C,yDAA2C;AAC3C,sEAAwD;AACxD,2DAA6C;AAC7C,iEAAmD;AAEtC,QAAA,MAAM,GAA2C;IAC5D,aAAa,EAAE,mBAAmB,CAAC,OAAO;IAC1C,MAAM,EAAE,YAAY,CAAC,OAAO;IAC5B,OAAO,EAAE,aAAa,CAAC,OAAO;IAC9B,MAAM,EAAE,YAAY,CAAC,OAAO;IAC5B,KAAK,EAAE,WAAW,CAAC,OAAO;IAC1B,OAAO,EAAE,aAAa,CAAC,OAAO;IAC9B,QAAQ,EAAE,cAAc,CAAC,OAAO;IAChC,GAAG,EAAE,GAAG,CAAC,OAAO;IAChB,QAAQ,EAAE,cAAc,CAAC,OAAO;IAChC,OAAO,EAAE,aAAa,CAAC,OAAO;IAC9B,aAAa,EAAE,mBAAmB,CAAC,OAAO;IAC1C,QAAQ,EAAE,cAAc,CAAC,OAAO;IAChC,WAAW,EAAE,iBAAiB,CAAC,OAAO;CACvC,CAAC;AAEF,SAAgB,SAAS,CAAC,EACxB,WAAW,EAAE,OAAO,EACpB,UAAU,GACG;IACb,OAAO,cAAM,CAAC,OAAO,CAAC;QACpB,CAAC,CAAC,cAAM,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC;QAC7B,CAAC,CAAC,0BAA0B,CAAC,SAAS,CAAC;AAC3C,CAAC;AAPD,8BAOC","sourcesContent":["import type { Preset, PresetConfig } from '../types';\nimport * as compatibilityPreset from './compatibility';\nimport * as configPreset from './config';\nimport * as defaultPreset from './default';\nimport * as dockerPreset from './docker';\nimport * as groupPreset from './group';\nimport * as helpersPreset from './helpers';\nimport * as monorepoPreset from './monorepo';\nimport * as npm from './npm';\nimport * as packagesPreset from './packages';\nimport * as previewPreset from './preview';\nimport * as regexManagersPreset from './regex-managers';\nimport * as schedulePreset from './schedule';\nimport * as workaroundsPreset from './workarounds';\n\nexport const groups: Record<string, Record<string, Preset>> = {\n  compatibility: compatibilityPreset.presets,\n  config: configPreset.presets,\n  default: defaultPreset.presets,\n  docker: dockerPreset.presets,\n  group: groupPreset.presets,\n  helpers: helpersPreset.presets,\n  monorepo: monorepoPreset.presets,\n  npm: npm.presets,\n  packages: packagesPreset.presets,\n  preview: previewPreset.presets,\n  regexManagers: regexManagersPreset.presets,\n  schedule: schedulePreset.presets,\n  workarounds: workaroundsPreset.presets,\n};\n\nexport function getPreset({\n  packageName: pkgName,\n  presetName,\n}: PresetConfig): Preset | undefined {\n  return groups[pkgName]\n    ? groups[pkgName][presetName]\n    : /* istanbul ignore next */ undefined;\n}\n"]}