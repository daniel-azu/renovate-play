{"version":3,"file":"global.js","sourceRoot":"","sources":["../../lib/config/global.ts"],"names":[],"mappings":";;;AAEA,IAAI,gBAAgB,GAAqB,EAAE,CAAC;AAE5C,iIAAiI;AACjI,MAAM,iBAAiB,GAAG;IACxB,4BAA4B;IAC5B,mCAAmC;IACnC,cAAc;IACd,4BAA4B;IAC5B,cAAc;IACd,oBAAoB;IACpB,mBAAmB;IACnB,mBAAmB;IACnB,YAAY;IACZ,QAAQ;IACR,cAAc;IACd,gBAAgB;IAChB,YAAY;IACZ,UAAU;IACV,UAAU;CACX,CAAC;AAEF,SAAgB,eAAe,CAC7B,SAA4C,EAAE;IAE9C,gBAAgB,GAAG,EAAE,CAAC;IACtB,MAAM,MAAM,GAAG,EAAE,GAAG,MAAM,EAAE,CAAC;IAC7B,KAAK,MAAM,MAAM,IAAI,iBAAiB,EAAE;QACtC,gBAAgB,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;QAC1C,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,wCAAwC;KAChE;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAVD,0CAUC;AAED,SAAgB,eAAe;IAC7B,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AAFD,0CAEC","sourcesContent":["import type { RenovateConfig, RepoGlobalConfig } from './types';\n\nlet repoGlobalConfig: RepoGlobalConfig = {};\n\n// TODO: once global config work is complete, add a test to make sure this list includes all options with globalOnly=true (#9603)\nconst repoGlobalOptions = [\n  'allowCustomCrateRegistries',\n  'allowPostUpgradeCommandTemplating',\n  'allowScripts',\n  'allowedPostUpgradeCommands',\n  'binarySource',\n  'customEnvVariables',\n  'dockerChildPrefix',\n  'dockerImagePrefix',\n  'dockerUser',\n  'dryRun',\n  'exposeAllEnv',\n  'migratePresets',\n  'privateKey',\n  'localDir',\n  'cacheDir',\n];\n\nexport function setGlobalConfig(\n  config: RenovateConfig | RepoGlobalConfig = {}\n): RenovateConfig {\n  repoGlobalConfig = {};\n  const result = { ...config };\n  for (const option of repoGlobalOptions) {\n    repoGlobalConfig[option] = config[option];\n    delete result[option]; // eslint-disable-line no-param-reassign\n  }\n  return result;\n}\n\nexport function getGlobalConfig(): RepoGlobalConfig {\n  return repoGlobalConfig;\n}\n"]}