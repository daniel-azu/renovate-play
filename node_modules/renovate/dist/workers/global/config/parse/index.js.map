{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../lib/workers/global/config/parse/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as defaultsParser from '../../../../config/defaults';\nimport { AllConfig } from '../../../../config/types';\nimport { mergeChildConfig } from '../../../../config/utils';\nimport { addStream, logger, setContext } from '../../../../logger';\nimport { ensureDir, getSubDirectory, readFile } from '../../../../util/fs';\nimport { ensureTrailingSlash } from '../../../../util/url';\nimport * as cliParser from './cli';\nimport * as envParser from './env';\nimport * as fileParser from './file';\n\nexport async function parseConfigs(\n  env: NodeJS.ProcessEnv,\n  argv: string[]\n): Promise<AllConfig> {\n  logger.debug('Parsing configs');\n\n  // Get configs\n  const defaultConfig = defaultsParser.getConfig();\n  const fileConfig = fileParser.getConfig(env);\n  const cliConfig = cliParser.getConfig(argv);\n  const envConfig = envParser.getConfig(env);\n\n  let config: AllConfig = mergeChildConfig(fileConfig, envConfig);\n  config = mergeChildConfig(config, cliConfig);\n\n  const combinedConfig = config;\n\n  config = mergeChildConfig(defaultConfig, config);\n\n  if (config.forceCli) {\n    const forcedCli = { ...cliConfig };\n    delete forcedCli.token;\n    delete forcedCli.hostRules;\n    if (config.force) {\n      config.force = { ...config.force, ...forcedCli };\n    } else {\n      config.force = forcedCli;\n    }\n  }\n\n  if (!config.privateKey && config.privateKeyPath) {\n    config.privateKey = await readFile(config.privateKeyPath);\n    delete config.privateKeyPath;\n  }\n\n  if (config.logContext) {\n    // This only has an effect if logContext was defined via file or CLI, otherwise it would already have been detected in env\n    setContext(config.logContext);\n  }\n\n  // Add file logger\n  // istanbul ignore if\n  if (config.logFile) {\n    logger.debug(\n      `Enabling ${config.logFileLevel} logging to ${config.logFile}`\n    );\n    await ensureDir(getSubDirectory(config.logFile));\n    addStream({\n      name: 'logfile',\n      path: config.logFile,\n      level: config.logFileLevel,\n    });\n  }\n\n  logger.trace({ config: defaultConfig }, 'Default config');\n  logger.debug({ config: fileConfig }, 'File config');\n  logger.debug({ config: cliConfig }, 'CLI config');\n  logger.debug({ config: envConfig }, 'Env config');\n  logger.debug({ config: combinedConfig }, 'Combined config');\n\n  // Get global config\n  logger.trace({ config }, 'Full config');\n\n  // Print config\n  logger.trace({ config }, 'Global config');\n\n  // Massage endpoint to have a trailing slash\n  if (config.endpoint) {\n    logger.debug('Adding trailing slash to endpoint');\n    config.endpoint = ensureTrailingSlash(config.endpoint);\n  }\n\n  // Remove log file entries\n  delete config.logFile;\n  delete config.logFileLevel;\n\n  return config;\n}\n"]}